/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package product;

import com.mysql.jdbc.Blob;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author USER
 */
public class product_1 extends javax.swing.JFrame {

    /**
     * Creates new form product_1
     */
    public product_1() {
        initComponents();
         Show_Product_In_JTable();
        
    }
    
    
     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    String ImgPath=null;
    int pos=0;
    ResultSet rs = null;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txt_Id = new javax.swing.JTextField();
        txt_Price = new javax.swing.JTextField();
        txt_Name = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lbl_image = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btn_Choose_Image = new javax.swing.JButton();
        btn_Update = new javax.swing.JButton();
        btn_Delete = new javax.swing.JButton();
        btn_Insert = new javax.swing.JButton();
        btn_Next = new javax.swing.JButton();
        btn_Last = new javax.swing.JButton();
        btn_First = new javax.swing.JButton();
        btn_Previous = new javax.swing.JButton();
        txt_Add_Date = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("User Name :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("ID :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setText("Price :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Add Date :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Image :");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255), 2));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1244, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );

        txt_Id.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txt_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_IdActionPerformed(evt);
            }
        });

        txt_Price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        txt_Name.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 51, 51));
        jLabel7.setText("Products Form");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(463, 463, 463)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        lbl_image.setBackground(new java.awt.Color(153, 204, 255));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Price", "Add Date"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        btn_Choose_Image.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_Choose_Image.setText("Choose Image");
        btn_Choose_Image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Choose_ImageActionPerformed(evt);
            }
        });

        btn_Update.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/product/icons8-update-48.png"))); // NOI18N
        btn_Update.setText("Update");
        btn_Update.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_Update.setIconTextGap(2);
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });

        btn_Delete.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/product/icons8-delete-48.png"))); // NOI18N
        btn_Delete.setText("Delete");
        btn_Delete.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_Delete.setIconTextGap(2);
        btn_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteActionPerformed(evt);
            }
        });

        btn_Insert.setBackground(new java.awt.Color(0, 153, 255));
        btn_Insert.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_Insert.setForeground(new java.awt.Color(255, 255, 255));
        btn_Insert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/product/icons8-add-48.png"))); // NOI18N
        btn_Insert.setText("Insert");
        btn_Insert.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_Insert.setIconTextGap(2);
        btn_Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InsertActionPerformed(evt);
            }
        });

        btn_Next.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_Next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/product/icons8-next-48.png"))); // NOI18N
        btn_Next.setText("Next");
        btn_Next.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_Next.setIconTextGap(2);
        btn_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NextActionPerformed(evt);
            }
        });

        btn_Last.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_Last.setIcon(new javax.swing.ImageIcon(getClass().getResource("/product/icons8-last-1-48.png"))); // NOI18N
        btn_Last.setText("Last");
        btn_Last.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_Last.setIconTextGap(2);
        btn_Last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LastActionPerformed(evt);
            }
        });

        btn_First.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_First.setIcon(new javax.swing.ImageIcon(getClass().getResource("/product/icons8-home-48.png"))); // NOI18N
        btn_First.setText("First");
        btn_First.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_First.setIconTextGap(2);
        btn_First.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_FirstActionPerformed(evt);
            }
        });

        btn_Previous.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_Previous.setIcon(new javax.swing.ImageIcon(getClass().getResource("/product/icons8-previous-48.png"))); // NOI18N
        btn_Previous.setText("Previous");
        btn_Previous.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_Previous.setIconTextGap(2);
        btn_Previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_PreviousActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btn_Insert)
                        .addGap(20, 20, 20)
                        .addComponent(btn_Update)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Delete))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txt_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(32, 32, 32)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btn_Choose_Image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_image, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(txt_Add_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(118, 118, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_First)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_Previous)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Next)
                        .addGap(12, 12, 12)
                        .addComponent(btn_Last))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_Id))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Name))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Price))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Add_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_image, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Choose_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Insert)
                    .addComponent(btn_Next, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Last, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_First, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Previous, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1264, 764));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_Choose_ImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Choose_ImageActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.images","jpg","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        if(result==JFileChooser.APPROVE_OPTION){
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            lbl_image.setIcon(ResizeImage(path,null));
            ImgPath = path;
        }else{
            System.out.println("No File Selected!");
        }
            
    }//GEN-LAST:event_btn_Choose_ImageActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentResized

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentMoved

    private void btn_InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InsertActionPerformed
        if(checkInputs() && ImgPath != null){
             
            try {
                Connection con = getConnection();
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String addDate  = dateFormat.format(txt_Add_Date.getDate());
                 InputStream img = new FileInputStream(new File(ImgPath));
                
                PreparedStatement ps = (PreparedStatement) con.prepareStatement("INSERT INTO `products`(`id`, `name`, `price`, `add-date`, `image`) VALUES (null,'"+txt_Name.getText()+"','"+txt_Price.getText()+"','"+addDate+"','"+img+"')");
                ps.executeUpdate();
                 Show_Product_In_JTable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex.getMessage());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(product_1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "One or More field are Empty");
        }
        System.out.println("Name => "+txt_Name.getText());
        System.out.println("Price => "+txt_Price.getText());
        System.out.println("Image => "+ImgPath);
        System.out.println("input => "+checkInputs());
        System.out.println("date => "+txt_Add_Date.getDate());
    }//GEN-LAST:event_btn_InsertActionPerformed

    private void txt_Add_DateAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_txt_Add_DateAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_Add_DateAncestorAdded
  
    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        
                                            
    // Check if all necessary inputs are provided
    if (checkInputs() && txt_Id.getText() != null) {
        Connection con = null;
        PreparedStatement ps = null;
        try {
            // Establish a database connection
            con = getConnection();
            if (con == null) {
                System.err.println("Failed to establish a database connection.");
                return;
            }
            
            // Prepare the SQL query for updating
            String updateQuery;
            if (ImgPath == null) {
       //         updateQuery = "UPDATE products SET name = ?, price = ?, add-date = ? WHERE id = ?";
                updateQuery = "UPDATE products SET name = ?, price = ?, `add-date` = ? WHERE id = ?";

                ps = (PreparedStatement) con.prepareStatement(updateQuery);
                ps.setString(1, txt_Name.getText());
                ps.setString(2, txt_Price.getText());
                ps.setDate(3, new java.sql.Date(txt_Add_Date.getDate().getTime())); // Convert util.Date to sql.Date
                ps.setInt(4, Integer.parseInt(txt_Id.getText()));
                Show_Product_In_JTable();
            } else { 
                // Update with image
                InputStream imgStream = new FileInputStream(new File(ImgPath));
       //         updateQuery = "UPDATE products SET name = ?, price = ?, add-date = ?, image = ? WHERE id = ?";
                updateQuery = "UPDATE products SET name = ?, price = ?, `add-date` = ?, image = ? WHERE id = ?";

                ps = (PreparedStatement) con.prepareStatement(updateQuery);
                ps.setString(1, txt_Name.getText());
                ps.setString(2, txt_Price.getText());
                ps.setDate(3, new java.sql.Date(txt_Add_Date.getDate().getTime())); // Convert util.Date to sql.Date
                ps.setBinaryStream(4, imgStream);
                ps.setInt(5, Integer.parseInt(txt_Id.getText()));
               
            }
            
            // Execute the update query
            int rowsAffected = ps.executeUpdate();
            
            if (rowsAffected > 0) {
                System.out.println("Update successful. Rows affected: " + rowsAffected);
                 Show_Product_In_JTable();
            } else {
                System.out.println("No rows affected by the update.");
            }
        } catch (SQLException | FileNotFoundException ex) {
            System.err.println("Error occurred during update: " + ex.getMessage());
            ex.printStackTrace(); // Print the stack trace for detailed error information
        } finally {
            // Close PreparedStatement and Connection
            try {
                if (ps != null) {
                    ps.close();
                }
                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                System.err.println("Error closing resources: " + ex.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "One or more fields are empty or invalid.");
    }



    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int index = table.getSelectedRow();
        ShowItem(index);
    }//GEN-LAST:event_tableMouseClicked

    private void btn_FirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_FirstActionPerformed
        pos = 0;
        ShowItem(pos);
    }//GEN-LAST:event_btn_FirstActionPerformed

    private void btn_LastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LastActionPerformed
        pos = getProductList().size()-1;
        ShowItem(pos);
    }//GEN-LAST:event_btn_LastActionPerformed

    private void btn_NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NextActionPerformed
       pos++;
       if(pos >= getProductList().size()){
           pos=getProductList().size()-1;
       }
        ShowItem(pos);
    }//GEN-LAST:event_btn_NextActionPerformed

    private void btn_PreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_PreviousActionPerformed
        pos--;
        if(pos < 0 ){
            pos=0;
        }
        ShowItem(pos);
    }//GEN-LAST:event_btn_PreviousActionPerformed

    private void btn_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteActionPerformed
        if(!(txt_Id.getText().equals(""))){
            try {
                Connection con = getConnection();
                PreparedStatement ps = (PreparedStatement) con.prepareStatement("DELETE FROM products WHERE id = ? ");
                int id = Integer.parseInt(txt_Id.getText());
                ps.setInt(1, id);
                ps.executeUpdate();
                
                JOptionPane.showMessageDialog(null,"Delete succes!");
                Show_Product_In_JTable();
            } catch (SQLException ex) {
                Logger.getLogger(product_1.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "False to delete!");
            }
        }else{
            JOptionPane.showMessageDialog(null, "NO id to delete!");
        }
    }//GEN-LAST:event_btn_DeleteActionPerformed

    private void txt_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_IdActionPerformed

    public Connection getConnection(){
        Connection con = null;
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/produc_db_1","root","");
            
            return con;
        } catch (SQLException ex) {
            Logger.getLogger(product_1.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "not Connected");
            return null;
        }
    }
    
    /**
     *
     */
    public boolean checkInputs(){
        if(
               txt_Name.getText()== null
            || txt_Price.getText()==null
            || txt_Add_Date.getDate()==null
          ){
            return false;
        }else{
            try{
                Float.parseFloat(txt_Price.getText());
                return true;
            }catch(Exception ex){
                return false;
            }    
                
        }
    }
  
    
    public void Show_Product_In_JTable(){
        ArrayList<Product> list = getProductList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        for(int i=0;i<list.size();i++){
            row[0]=list.get(i).getId();
             row[1]=list.get(i).getName();
              row[2]=list.get(i).getPrice();
               row[3]=list.get(i).getAddDate();
               
               model.addRow(row);
                 
        }  
    }
 
    
   public ImageIcon ResizeImage(String imagePath, byte[] pic) {
    ImageIcon myImage = null;
    if (imagePath != null) {
        myImage = new ImageIcon(imagePath);
    } else {
        myImage = new ImageIcon(pic);
    }
    Image img = myImage.getImage();
    Image img2 = img.getScaledInstance(lbl_image.getWidth(), lbl_image.getHeight(), Image.SCALE_SMOOTH);
    ImageIcon image = new ImageIcon(img2);
    return image;
}



public ArrayList<Product> getProductList() {
    ArrayList<Product> productList = new ArrayList<>();
    Connection con = null;
    PreparedStatement ps = null;
    
    try {
        con = getConnection();
        String query = "SELECT * FROM products";
        ps = (PreparedStatement) con.prepareStatement(query);
        rs = ps.executeQuery();
        while (rs.next()) {
            Product product = new Product(rs.getInt("id"), rs.getString("name"),
                    Float.parseFloat(rs.getString("price")), rs.getString("add-date"),
                    rs.getBytes("image"));
                        
            productList.add(product);
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    } finally {
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
            if (con != null) con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    return productList;
}

public void ShowItem(int index) {
    Product product = getProductList().get(index);
    txt_Id.setText(Integer.toString(product.getId()));
    txt_Name.setText(product.getName());
    txt_Price.setText(Float.toString(product.getPrice()));
    try {
        Date addDate = new SimpleDateFormat("yyyy-MM-dd").parse(product.getAddDate());
        txt_Add_Date.setDate(addDate);
    } catch (ParseException ex) {
        ex.printStackTrace();
    }

    byte[] imageData = product.getImage();
    // Check if image data is null or empty
    if (imageData == null || imageData.length == 0) {
        System.out.println("Image data is null or empty.");
        return;
    }

    // Create a ByteArrayInputStream from the image data
    ByteArrayInputStream bis = new ByteArrayInputStream(imageData);
    // Use ImageIcon constructor that accepts byte array
    ImageIcon icon = new ImageIcon(imageData);
    System.out.println(imageData);
    lbl_image.setIcon(ResizeImage(null,imageData));   
}      
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new product_1().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Choose_Image;
    private javax.swing.JButton btn_Delete;
    private javax.swing.JButton btn_First;
    private javax.swing.JButton btn_Insert;
    private javax.swing.JButton btn_Last;
    private javax.swing.JButton btn_Next;
    private javax.swing.JButton btn_Previous;
    private javax.swing.JButton btn_Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_image;
    private javax.swing.JTable table;
    private com.toedter.calendar.JDateChooser txt_Add_Date;
    private javax.swing.JTextField txt_Id;
    private javax.swing.JTextField txt_Name;
    private javax.swing.JTextField txt_Price;
    // End of variables declaration//GEN-END:variables

    
}
